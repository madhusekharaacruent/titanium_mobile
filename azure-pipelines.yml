# trigger:
#  branches:
#    include:
#        - main
#  paths:
#   include:
#       - app/Resources/*


# schedules:
# - cron: "0 3 * * 1-5"
#  displayName: iOS Daily Build
#  branches:
#    include: [ main ] 
#  always: false   

pool:
  vmImage: 'macOS-12'

variables:
#  MAINMOB: $(System.DefaultWorkingDirectory)
#  buildPatchNumber: $[counter(variables['build.reason'], 0)]

steps:

- task: Bash@3
  displayName: 'Update build number'
  inputs:
    targetType: 'inline'
    script: |
      echo "MAINMOB: $MAINMOB"
      # echo "MAINMOB: $(MAINMOB)"
      # echo "$(System.DefaultWorkingDirectory)"
      # ls "$(System.DefaultWorkingDirectory)"
      # echo "grep:"
      # grep --help
      # echo "sed:"
      # sed --help
      # cat $(System.DefaultWorkingDirectory)/app/Resources/ui/Utils.js
      # cat $(System.DefaultWorkingDirectory)/app/Resources/ui/Utils.js | grep "app_version ="
      # cat $(System.DefaultWorkingDirectory)/app/Resources/ui/Utils.js | grep "app_version =" | sed "s/.*'\([^']*\)'.*/\1/"
      # git status
      # git branch
      export build_number=`cat $(System.DefaultWorkingDirectory)/app/Resources/ui/Utils.js | grep "app_version =" | sed "s/.*'\([^']*\)'.*/\1/"`
      echo "build_number: $build_number"
      echo "##vso[build.updatebuildnumber]$build_number"

- task: Bash@3
  displayName: 'Print build number'
  inputs:
    targetType: 'inline'
    script: |
      echo "build_number: $build_number"
      echo "JAVA_HOME_17_X64: $JAVA_HOME_17_X64"
      export JAVA_HOME=$JAVA_HOME_17_X64
      echo "JAVA_HOME: $JAVA_HOME"
      java -version

- task: NodeTool@0
  displayName: 'Install Node'
  inputs:
    versionSource: 'spec'
    versionSpec: '14.21.3'

- task: Bash@3
  displayName: 'Install Titanium'
  inputs:
    targetType: 'inline'
    script: |
      cd $(System.DefaultWorkingDirectory)

      # Install Titanium 6.1.1 CLI
      sudo npm install titanium@6.1.1
      
      # and required nodejs modules:
      sudo npm install node-uuid@1.3.3
      sudo npm install node-fetch@2.6.1

      # echo "ls /usr/local/bin"
      # ls /usr/local/bin
      # echo "PATH:"
      # echo $PATH
      # echo "env:"
      # env
      # echo "ls ~"
      # ls -al $HOME
      # echo "ls ~/node_modules"
      # ls -al $HOME/node_modules
      # echo "ls /usr/local/lib/node_modules"
      # ls -al /usr/local/lib/node_modules
      # echo "ls /Users/runner/work/node_modules"
      # ls -al /Users/runner/work/node_modules
      # echo "ls $HOME/work"
      # ls -al HOME/work
      
      # Create symbolic link to titanium CLI 
      sudo ln -s $HOME/work/node_modules/titanium/bin/titanium /usr/local/bin/titanium

      # titanium --version
      # titanium --help
      # titanium sdk
      
      # Download the Titanium framework build
      # TODO: Find a way to host this in a way that doesn't require Dropbox
      wget https://dl.dropboxusercontent.com/s/u8uy6p9t3rltxsd/11.1.1.GA.MAINTAIN.zip
      # echo "After wget..."
      # ls -al
      # echo "which titanium"
      # which titanium
      
      # Titanium SDKs are installed to: $HOME/Library/Application Support/Titanium/mobilesdk/osx
      # ls "$HOME/Library/Application Support"
      
      # Create the SDK folders and set appropriate permissions:
      sudo mkdir "$HOME/Library/Application Support/Titanium"
      sudo chown runner:staff "$HOME/Library/Application Support/Titanium"
      sudo mkdir "$HOME/Library/Application Support/Titanium/mobilesdk"
      sudo chown runner:staff "$HOME/Library/Application Support/Titanium/mobilesdk"
      sudo mkdir "$HOME/Library/Application Support/Titanium/mobilesdk/osx"
      sudo chown runner:staff "$HOME/Library/Application Support/Titanium/mobilesdk/osx"

      # echo "~/Library/Application Support:"
      # ls -al "$HOME/Library/Application Support"
      # titanium sdk install latest

      # Install the Titanium sdk by unzipping it to the right folder:
      cd "$HOME/Library/Application Support/Titanium/mobilesdk/osx"
      echo "Unzipping 11.1.1.GA.MAINTAIN"
      sudo unzip $(System.DefaultWorkingDirectory)/11.1.1.GA.MAINTAIN.zip
      # Set the correct permissions for the SDK:
      sudo chown -R runner:staff 11.1.1.GA.MAINTAIN

      cd $(System.DefaultWorkingDirectory)
      # titanium sdk
      # echo "$HOME/Library/Application Support/Titanium/mobilesdk/osx:"
      # ls -al "$HOME/Library/Application Support/Titanium/mobilesdk/osx"

      # Set the SDK as default
      titanium sdk select 11.1.1.GA.MAINTAIN


- task: Bash@3
  displayName: 'Java check'
  inputs:
    targetType: 'inline'
    script: |
      java -version

- task: Bash@3
  displayName: 'Run azurebuild.bash'
  timeoutInMinutes: 60
  inputs:
    targetType: 'inline'
    script: |
      # Set the right java version:
      echo "build_number: $build_number"
      echo "JAVA_HOME_17_X64: $JAVA_HOME_17_X64"
      export JAVA_HOME=$JAVA_HOME_17_X64
      echo "JAVA_HOME: $JAVA_HOME"
      java -version

      # Run the build:
      ./scripts/azurebuild.bash

- task: Bash@3
  displayName: 'Build number check'
  inputs:
    targetType: 'inline'
    script: |
      # Check build number, as this will be used in the artifect generation below
      echo "Build number: $(Build.BuildNumber)"
      # List release files
      ls -al "$(System.DefaultWorkingDirectory)/release/files"

- task: PublishPipelineArtifact@1
  displayName: 'Publish Appstore ipa to Pipeline Artifacts'
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/release/files/Accruent-v$(Build.BuildNumber)-iOS-APPSTORE.ipa'
    artifact: 'Accruent-v$(Build.BuildNumber)-iOS-APPSTORE.ipa'
    publishLocation: 'pipeline'

- task: PublishPipelineArtifact@1
  displayName: 'Publish testing ipa to Pipeline Artifacts'
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)/release/files/MaintainMobile-iOS-Next-v$(Build.BuildNumber).ipa'
    artifact: 'MaintainMobile-iOS-Next-v$(Build.BuildNumber).ipa'
    publishLocation: 'pipeline'


